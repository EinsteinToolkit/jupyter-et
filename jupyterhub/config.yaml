# Example Jupyterhub configuration for ESIPhub
hub:
  # output of second execution of 'openssl rand -hex 32'
  cookieSecret: ""
  db:
    type: sqlite-pvc
    pvc:
      accessModes:
        - ReadWriteOnce
      storage: 1Gi
      storageClassName: nfs
  cull:
    timeout: 345600
    every: 3600
  extraConfig: |    
    from oauthenticator.github import GitHubOAuthenticator
    from oauthenticator.cilogon import CILogonOAuthenticator
    import requests

    # this is needed to allow logins by non-education identity providers that
    # do not have the eppn field
    c.CILogonOAuthenticator.additional_username_claim = 'email'

    #class WhitelistAuthenticator(CILogonOAuthenticator):
    class WhitelistAuthenticator(GitHubOAuthenticator):
     
        def check_whitelist(self, username):
            r = requests.get('http://whitelist.etkhub/users.txt')
            whitelist = r.text.split('\n')
            return username in whitelist

    c.JupyterHub.authenticator_class = WhitelistAuthenticator
  extraVolumes:
    - hostPath:
         path: "/home/ubuntu/jupyterhub/templates"
      name: templates
  extraVolumeMounts:
    - name: templates
      mountPath: "/usr/local/share/jupyterhub/templates"
 

proxy:
  # output of second execution of 'openssl rand -hex 32'
  secretToken: ""


auth:
  type: github
  github:
    # Oauth clientId and clientSecret
    clientId: "e08e8ab7f525dc8f099c"
    clientSecret: "735044c4bcf1a6cb3356c703b55b39d7826feaa4"
    callbackUrl: "https://etkhub.ndslabs.org/hub/oauth_callback"
  #type: cilogon
  cilogon:
    # Oauth clientId and clientSecret
    clientId: "cilogon:/client_id/14f979f915effd1d51edb8381780dfa0"
    clientSecret: "XnZHzOH0MEehuVisqmwh5LYr5TmaPcTK53nANgNmbDxoGAqHwXfw4LGWTFvO5lhFAE6bJ-rm-Ychx9c5BO6dCg"
    callbackUrl: "https://etkhub.ndslabs.org/hub/oauth_callback"


singleuser:
  memory:
    guarantee: 1G
    limit: 8G
  cpu:
  #  guarantee: 2
    limit: 2
  storage:
    type: none
  image:
    name: ndslabs/jupyter-et
    tag: latest
  lifecycleHooks:
    postStart:
      exec:
        command:
          - "/usr/local/bin/start-notebook.sh"

            
ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
  hosts:
    - etkhub.ndslabs.org
  tls:
   - hosts:
      - etkhub.ndslabs.org
     secretName: kubelego-tls-jupyterhub
